/* Contenedor grid */
.tiles {
  --cols: 20;   /* # de columnas del grid */
  --span: 4;    /* cuántas columnas ocupa cada tile */
  position: absolute; inset: 0;
  display: grid;
  gap: 8px;
  padding: 8px;
  grid-auto-flow: dense;
  grid-template-columns: repeat(var(--cols), 1fr);
  grid-auto-rows: 6vw;
}

.tile {
  grid-column: span var(--span);
  grid-row: span 2;             /* todas iguales de alto */
  background-size: cover;
  background-position: center;
  background-color: #111;
  border-radius: 10px;
  transition: transform .2s ease;
  will-change: transform;
}

/* Fila “par” con offset: media columna del ancho de la tile */
.tile.brick-offset {
  transform: translateX(calc(100% / (var(--span) * 2)));
}

/* (opcional) un leve jitter vertical para romper líneas aún más */
.tile.brick-offset:nth-child(odd) {
  transform: translateX(calc(100% / (var(--span) * 2))) translateY(6px);
}


/* todos iguales */
.tile { grid-column: span 4; grid-row: span 2; }

/* offsets suaves por patrón de index, sin JS */
.tile:nth-child(6n+1){ transform: translateY(6px)  rotate(-0.4deg); }
.tile:nth-child(6n+2){ transform: translateY(12px) rotate(0.3deg);  }
.tile:nth-child(6n+3){ transform: translateY(-8px) rotate(0.2deg);  }
.tile:nth-child(6n+4){ transform: translateY(10px) rotate(-0.3deg); }
.tile:nth-child(6n+5){ transform: translateY(-6px) rotate(0.4deg);  }
.tile:nth-child(6n+6){ transform: translateY(4px)  rotate(-0.2deg);  }